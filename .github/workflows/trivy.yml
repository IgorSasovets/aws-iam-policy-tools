# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Trivy Scan

on:
  workflow_dispatch # workflow will be triggered manually
  #push:
  #  branches: [ "main" ] # workflow will be triggered to run only when a push to a branch that matches the branches filter occurs
  #pull_request:
    # The branches below must be a subset of the branches above
  #  branches: [ "main" ] # workflow will be triggered to run only for pull requests that target specific branches

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Build
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # More details about configuration options: https://github.com/aquasecurity/trivy-action?tab=readme-ov-file#inputs
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scanners: 'vuln,secret,config'
          scan-ref: './clf-templates/' # for CloudFormation templates
          # scan-ref: './tf-templates/rhino_cloudgoat_lambda_privesc/terraform/' # for Terraform templates
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1' # Exit code when specified vulnerabilities are found
          #severity: 'CRITICAL,HIGH' # Severities of vulnerabilities to be scanned for and displayed
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
